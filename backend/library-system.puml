@startuml Library Management System - Class Diagram

!define ENTITY_COLOR #E1F5FE
!define ENUM_COLOR #FFF3E0
!define SERVICE_COLOR #E8F5E8

' ==== ENTITIES ====

class User ENTITY_COLOR {
  -id: Long
  -firstName: String
  -lastName: String
  -email: String
  -registrationDate: LocalDateTime
  -library: Library
  -loans: List<Loan>
  -reservations: List<Reservation>
  --
  +getFullName(): String
  +canBorrowBooks(): boolean
  +getCurrentLoans(): List<Loan>
  +getReservationHistory(): List<Reservation>
  +getCurrentLoanCount(): long
  +getActiveReservations(): List<Reservation>
}

class Library ENTITY_COLOR {
  -id: Long
  -name: String
  -address: String
  -city: String
  -phoneNumber: String
  -email: String
  -openingTime: LocalTime
  -closingTime: LocalTime
  -isActive: Boolean
  -users: List<User>
  -staff: List<Staff>
  -bookCopies: List<BookCopy>
  --
  +getFullAddress(): String
  +isCurrentlyOpen(): boolean
  +getAvailableBooks(): List<Book>
  +getMemberCount(): long
  +getStaffCount(): long
}

class Staff ENTITY_COLOR {
  -id: Long
  -firstName: String
  -lastName: String
  -email: String
  -position: String
  -department: String
  -employeeId: String
  -hireDate: LocalDate
  -employmentStatus: EmploymentStatus
  -library: Library
  -supervisor: Staff
  --
  +getFullName(): String
  +searchBooks(query: String): List<Book>
  +checkBookAvailability(bookId: Long): boolean
  +processReturn(bookCopyId: Long): boolean
  +registerUser(userData: UserData): User
}

class Author ENTITY_COLOR {
  -id: Long
  -firstName: String
  -lastName: String
  -nationality: String
  -birthDate: LocalDate
  -biography: String
  -books: List<Book>
  --
  +getFullName(): String
  +getBooksWritten(): List<Book>
  +getAge(): int
}

class Book ENTITY_COLOR {
  -id: Long
  -title: String
  -isbn: String
  -publishedDate: LocalDate
  -description: String
  -availableCopies: Integer
  -totalCopies: Integer
  -author: Author
  -bookCopies: List<BookCopy>
  -reservations: List<Reservation>
  --
  +isAvailable(): boolean
  +borrowCopy(): boolean
  +returnCopy(): void
  +getDetailedInfo(): String
  +getCurrentReservations(): List<Reservation>
}

class BookCopy ENTITY_COLOR {
  -id: Long
  -book: Book
  -library: Library
  -barcode: String
  -isAvailable: Boolean
  -status: BookCopyStatus
  -location: String
  -acquisitionDate: LocalDateTime
  -lastMaintenanceDate: LocalDateTime
  -notes: String
  -loans: List<Loan>
  --
  +checkOut(): void
  +returnCopy(): void
  +markAsManaged(): void
  +sendToMaintenance(reason: String): void
  +getDisplayInfo(): String
  +getCurrentLoan(): Loan
  +isOnLoan(): boolean
}

class Loan ENTITY_COLOR {
  -id: Long
  -user: User
  -bookCopy: BookCopy
  -loanDate: LocalDateTime
  -dueDate: LocalDate
  -returnDate: LocalDateTime
  -status: LoanStatus
  -fineAmount: BigDecimal
  -notes: String
  --
  +isOverdue(): boolean
  +isActive(): boolean
  +getDaysOverdue(): long
  +returnBook(returnDateTime: LocalDateTime): void
  +returnBook(): void
  +markOverdue(dailyFineRate: BigDecimal): void
  +getLoanDurationDays(): long
  +getBook(): Book
}

class Reservation ENTITY_COLOR {
  -id: Long
  -user: User
  -book: Book
  -reservationDate: LocalDateTime
  -expiryDate: LocalDate
  -status: ReservationStatus
  -queuePosition: Integer
  --
  +isExpired(): boolean
  +isActive(): boolean
  +fulfill(): void
  +cancel(): void
  +expire(): void
  +getDaysUntilExpiry(): long
  +updateQueuePosition(position: Integer): void
}



' ==== ENUMS ====

enum EmploymentStatus ENUM_COLOR {
  ACTIVE
  ON_LEAVE
  TERMINATED
  RETIRED
}

enum BookCopyStatus ENUM_COLOR {
  AVAILABLE
  CHECKED_OUT
  RESERVED
  MAINTENANCE
  LOST
  DAMAGED
}

enum LoanStatus ENUM_COLOR {
  ACTIVE
  RETURNED
  OVERDUE
  LOST
  DAMAGED
}

enum ReservationStatus ENUM_COLOR {
  ACTIVE
  FULFILLED
  EXPIRED
  CANCELLED
}



' ==== RELATIONSHIPS ====

' User relationships
User ||--o{ Loan : "borrows"
User ||--o{ Reservation : "reserves"
User }o--|| Library : "member of"

' Library relationships  
Library ||--o{ Staff : "employs"
Library ||--o{ BookCopy : "houses"

' Staff relationships
Staff }o--|| Library : "works at"
Staff }o--o| Staff : "supervised by"

' Author-Book relationship
Author ||--o{ Book : "writes"

' Book relationships
Book ||--o{ BookCopy : "has copies"
Book ||--o{ Reservation : "reserved"

' BookCopy-Loan relationship (KEY CHANGE!)
BookCopy ||--o{ Loan : "loaned as"

' Enum relationships
Staff ||--|| EmploymentStatus
BookCopy ||--|| BookCopyStatus
Loan ||--|| LoanStatus
Reservation ||--|| ReservationStatus

' ==== NOTES ====

note top of Loan : **KEY DESIGN CHANGE**\nLoan connects to BookCopy\n(specific physical copy)\nnot Book (abstract concept)

note top of BookCopy : **PHYSICAL INVENTORY**\nEach copy has unique barcode\nTracks location, condition\nUsers borrow specific copies

note right of Library : **MULTI-BRANCH SUPPORT**\nEach library manages\nits own physical inventory\nand staff

note bottom of Book : **METADATA ONLY**\nNo direct loan relationship\nTracks total/available counts\nacross all libraries

@enduml 